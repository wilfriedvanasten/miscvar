#!/bin/sh
# This script outputs a relative bar of the used memory compared to the complete memory in
# a format that fits into the tmux status line. It uses free's +/- caches lines to achieve
# this and uses bc to calculate the percentage

# A check to see if bc is present
if type bc > /dev/null 2>&1 ; then
	# Greps relative information from the free command and sed it to a ready for bc format
	# Then remove the part following the decimal point.
	MEMINFO=`cat /proc/meminfo`
	TOTAL=`echo "$MEMINFO" | grep -e '^MemTotal:' | sed 's#^[^0-9]*\([0-9][0-9]*\)[^0-9]*$#\1#g'`
	AVAILABLE=`echo "$MEMINFO" | grep -e '^MemAvailable:' | sed 's#^[^0-9]*\([0-9][0-9]*\)[^0-9]*$#\1#g'`
	if [ -z "$AVAILABLE" ] ; then
		# Meminfo available not yet in the output. Use the Free Buffers and Cache values instead
		FREE=`echo "$MEMINFO" | grep -e '^MemFree:' | sed 's#^[^0-9]*\([0-9][0-9]*\)[^0-9]*$#\1#g'`
		BUFFERS=`echo "$MEMINFO" | grep -e '^Buffers:' | sed 's#^[^0-9]*\([0-9][0-9]*\)[^0-9]*$#\1#g'`
		CACHED=`echo "$MEMINFO" | grep -e '^Cached:' | sed 's#^[^0-9]*\([0-9][0-9]*\)[^0-9]*$#\1#g'`
		AVAILABLE=`echo "$FREE+$BUFFERS+$CACHED;" | bc`
	fi
	RAW_PERC=`echo "scale=2; (($TOTAL-$AVAILABLE)/$TOTAL)*10;" | bc`
	PERC=`echo "scale=0; (((10^0)*$RAW_PERC)+0.5)/(10^0)" | bc`
	# Green is good
	COLOR='green'
	# Normal usage starts at 3 bars
	NORMAL="3"
	# Problem usage starts at 8 bars
	PROBLEM="8"
	if [ "$PERC" -gt "$NORMAL" ] ; then
		# Normal colors yellow
		COLOR='yellow'
		if [ "$PERC" -gt "$PROBLEM" ] ; then
			# Problem colors red
			COLOR='red'
		fi
	fi

	# Use awk to create a fancy bar. E.g.: [..........] [|||.......] [||||||||||]
	OUTPUT=`awk "BEGIN{printf \"[\"; for(c = 0; c < int($PERC + 0.5); c++) printf \"|\"; for(c = 0; c < 10 - int($PERC + 0.5); c++) printf \".\"; printf \"]\"}"`
	echo '#[fg='$COLOR']'$OUTPUT'#[fg=default]'
else
	echo "NO BC!!!"
fi
