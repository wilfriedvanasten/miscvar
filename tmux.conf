set -ag terminal-overrides ",xterm-termite:Tc"
set -g default-terminal "tmux-256color"
set -g status-bg colour234
set -g status-fg colour250
set-window-option -g window-status-current-style reverse
set-window-option -g window-status-format "[#I: #T]#F"
set-window-option -g window-status-current-format " #I: #T #F"
set -g status-left '#[fg=brightyellow][#S]#[fg=green][#(echo $USER)@#h] '
# When the gensysinfo service is running for the user, we cat
# the cached results from the service. This reduces the cost
# of the status bar significantly
if-shell 'systemctl --user is-active gensysinfo' \
    'set -g status-right " #(cat ~/.cpuutilblock)#(cat ~/.memblock)%H:%M %d-%m-%Y"' \
    'set -g status-right " #(/usr/bin/fish -c cpuutilblock)#(/usr/bin/fish -c memblock)%H:%M %d-%m-%Y"'
set -g status-left-length 30
set -g status-right-length 50
set -g set-titles on

# Append user@host to the window title when tmux
# is run over ssh, Otherwise we show tmux.
# This helps identify what a window is currently
# showing inside the task bar. This pattern does
# mean that for remote tmux sessions it will
# not show that it is running tmux. However
# this is preferable over user@host - tmux - tmux
# which is what would be showing when the ssh
# session is run in tmux (Which is nearly always
# the case for me.
if-shell 'test "$SSH_CONNECTION"' \
    'set -g set-titles-string "#T - #(echo $USER)@#h"' \
    'set -g set-titles-string "#T - tmux"'

# Store the shell level tmux is running in. This makes
# it possible to combine SHLVL and TMUX_SHLVL to give
# more useful nesting information inside tmux
set-environment -g TMUX_SHLVL $SHLVL
